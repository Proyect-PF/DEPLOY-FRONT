{"ast":null,"code":"import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AmountInput=function AmountInput(_ref){var stock=_ref.stock,size=_ref.size,amount=_ref.amount,setter=_ref.setter;//AL: amount state for visual changes in the component, the value passed\n//to the invoking is manneged by the \"setter\" function\n//AL: this functions manages the amount state & setting the value for the invoking page\nvar handleAmount=function handleAmount(event){event.preventDefault();var button=event.currentTarget;if(button.innerHTML===\"+\"){if(amount<stock(size)){setter(amount+1);}}else if(amount>1){setter(amount-1);}};useEffect(function(){setter(1);},[size]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex content-center gap-0 self-center px-4 ml-3 font-bold\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"h-7 w-7 border-t border-l border-b border-black\",onClick:handleAmount,children:\"-\"}),/*#__PURE__*/_jsx(\"p\",{className:\"h-7 w-9 border border-black\",children:amount}),/*#__PURE__*/_jsx(\"button\",{className:\"h-7 w-7 border-t border-r border-b border-black\",onClick:handleAmount,children:\"+\"})]});};export default AmountInput;","map":{"version":3,"names":["useEffect","AmountInput","stock","size","amount","setter","handleAmount","event","preventDefault","button","currentTarget","innerHTML"],"sources":["/Users/alejandroasor/Desktop/DEPLOY-FRONT/client/src/components/Inputs/Amount/AmountInput.tsx"],"sourcesContent":["import { useEffect } from \"react\";\n\ninterface Props {\n  stock: (size: string) => number;\n  size: string\n  amount: number\n  setter: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst AmountInput = ({ stock, size, amount, setter }: Props): JSX.Element => {\n  //AL: amount state for visual changes in the component, the value passed\n  //to the invoking is manneged by the \"setter\" function\n\n  //AL: this functions manages the amount state & setting the value for the invoking page\n  const handleAmount = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const button: HTMLButtonElement = event.currentTarget;\n    if (button.innerHTML === \"+\") {\n      if (amount < stock(size)) {\n        setter(amount + 1);\n      }\n    } else if (amount > 1) {\n      setter(amount - 1);\n    }\n  };\n\n  useEffect(() => {\n    setter(1)\n  }, [size])\n\n  return (\n    <div className=\"flex content-center gap-0 self-center px-4 ml-3 font-bold\">\n      <button className=\"h-7 w-7 border-t border-l border-b border-black\" onClick={handleAmount}>-</button>\n      <p className=\"h-7 w-9 border border-black\">{amount}</p>\n      <button className=\"h-7 w-7 border-t border-r border-b border-black\" onClick={handleAmount}>+</button>\n    </div>\n  );\n};\n\nexport default AmountInput;\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CAAC,wFASlC,GAAMC,YAAW,CAAG,QAAdA,YAAW,MAA4D,IAAtDC,MAAK,MAALA,KAAK,CAAEC,IAAI,MAAJA,IAAI,CAAEC,MAAM,MAANA,MAAM,CAAEC,MAAM,MAANA,MAAM,CAChD;AACA;AAEA;AACA,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,KAA0C,CAAK,CACnEA,KAAK,CAACC,cAAc,EAAE,CACtB,GAAMC,OAAyB,CAAGF,KAAK,CAACG,aAAa,CACrD,GAAID,MAAM,CAACE,SAAS,GAAK,GAAG,CAAE,CAC5B,GAAIP,MAAM,CAAGF,KAAK,CAACC,IAAI,CAAC,CAAE,CACxBE,MAAM,CAACD,MAAM,CAAG,CAAC,CAAC,CACpB,CACF,CAAC,IAAM,IAAIA,MAAM,CAAG,CAAC,CAAE,CACrBC,MAAM,CAACD,MAAM,CAAG,CAAC,CAAC,CACpB,CACF,CAAC,CAEDJ,SAAS,CAAC,UAAM,CACdK,MAAM,CAAC,CAAC,CAAC,CACX,CAAC,CAAE,CAACF,IAAI,CAAC,CAAC,CAEV,mBACE,aAAK,SAAS,CAAC,2DAA2D,wBACxE,eAAQ,SAAS,CAAC,iDAAiD,CAAC,OAAO,CAAEG,YAAa,UAAC,GAAC,EAAS,cACrG,UAAG,SAAS,CAAC,6BAA6B,UAAEF,MAAM,EAAK,cACvD,eAAQ,SAAS,CAAC,iDAAiD,CAAC,OAAO,CAAEE,YAAa,UAAC,GAAC,EAAS,GACjG,CAEV,CAAC,CAED,cAAeL,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}