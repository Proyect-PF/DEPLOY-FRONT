{"ast":null,"code":"import{combineReducers}from\"redux\";import adminReducer from\"../../AdminPanel/AdminRedux/reducer\";import checkoutReducer from\"./checkoutReducer\";import ordersReducer from\"./ordersReducer\";import productReducer from\"./productReducer\";import userReducer from\"./userReducer\";//AL: multiple reducers will be combined here, this leads to a cleaner modularization\nvar reducers=combineReducers({products:productReducer,user:userReducer,checkout:checkoutReducer,orders:ordersReducer,admin:adminReducer});export default reducers;","map":{"version":3,"names":["combineReducers","adminReducer","checkoutReducer","ordersReducer","productReducer","userReducer","reducers","products","user","checkout","orders","admin"],"sources":["/Users/alejandroasor/Desktop/DEPLOY-FRONT/client/src/state/reducers/index.tsx"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport adminReducer from \"../../AdminPanel/AdminRedux/reducer\";\nimport checkoutReducer from \"./checkoutReducer\";\nimport ordersReducer from \"./ordersReducer\";\nimport productReducer from \"./productReducer\";\nimport userReducer from \"./userReducer\";\n\n//AL: multiple reducers will be combined here, this leads to a cleaner modularization\nconst reducers = combineReducers({\n  products: productReducer,\n  user: userReducer,\n  checkout: checkoutReducer,\n  orders: ordersReducer,\n  admin: adminReducer,\n});\n\nexport default reducers;\n\nexport type State = ReturnType<typeof reducers>;\n"],"mappings":"AAAA,OAASA,eAAe,KAAQ,OAAO,CACvC,MAAOC,aAAY,KAAM,qCAAqC,CAC9D,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,MAAOC,cAAa,KAAM,iBAAiB,CAC3C,MAAOC,eAAc,KAAM,kBAAkB,CAC7C,MAAOC,YAAW,KAAM,eAAe,CAEvC;AACA,GAAMC,SAAQ,CAAGN,eAAe,CAAC,CAC/BO,QAAQ,CAAEH,cAAc,CACxBI,IAAI,CAAEH,WAAW,CACjBI,QAAQ,CAAEP,eAAe,CACzBQ,MAAM,CAAEP,aAAa,CACrBQ,KAAK,CAAEV,YACT,CAAC,CAAC,CAEF,cAAeK,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}